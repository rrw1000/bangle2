function SplitLines(text, nr) {
    const allWords = text.split(" ");
    let theLines = [ ]
    let thisLine = "";
    for (wordIdx in allWords) {
        const thisWord = allWords[wordIdx];
        if ((thisLine.length + thisWord.length) > nr) {
            if (thisLine.length > 0) { theLines.push(thisLine); }
            thisLine = thisWord;
        } else {
            if (thisLine.length > 0) { thisLine = thisLine + " "; }
            thisLine = thisLine + thisWord;
        }
    }
    if (thisLine.length > 0) {
        theLines.push(thisLine);
    }
    return theLines;
}

function RightPad(nr, elem, pad) {
    let elemStr = "" + elem;
    let toPad = nr-elemStr.length;
    if (toPad < 0) { toPad = 0; } 
    return elemStr + pad.repeat(toPad);
}

function LeftPad(nr, elem, pad) {
    let elemStr = "" + elem; // Force conversion
    if (elemStr.length > nr) {
        return elemStr;
    }
    return (pad.repeat(nr) + elemStr).substr(-nr);
}


function ToRoman(in_val) {
    // Use the constant array generated by the compiler - this does mean it's not testable :-(
    return COMPILER_ROMANS[in_val]
}


if (typeof module !== 'undefined') {
    module.exports.LeftPad = LeftPad;
    module.exports.RightPad = RightPad;
    module.exports.SplitLines = SplitLines;
}

